# !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
# This file is machine-generated by mktables from the Unicode
# database, Version 6.1.0.  Any changes made here will be lost!

# !!!!!!!   INTERNAL PERL USE ONLY   !!!!!!!
# This file is for internal use by core Perl only.  The format and even the
# name or existence of this file are subject to change without notice.  Don't
# use it directly.

# Use Unicode::UCD::prop_invlist() to access the contents of this file.
# 
# This file is for tables that are not necessarily related:  To conserve
# resources, every table that matches the identical set of code points in
# this version of Unicode uses this file.  Each one is listed in a separate
# group below.  It could be that the tables will match the same set of code
# points in other Unicode releases, or it could be purely coincidence that
# they happen to be the same in Unicode 6.1.0, and hence may not in other
# versions.
# 
# This file returns the 86 code points in Unicode Version 6.1.0 that match
# any of the following regular expression constructs:
# 
#         \p{Script_Extensions=Kannada}
#         \p{Scx=Knda}
# 
#         \p{Script=Kannada}
#         \p{Sc=Knda}
# 
#         \p{Kannada}
#         \p{Is_Kannada}
#         \p{Knda}
#         \p{Is_Knda}
# 
#     Note that contrary to what you might expect, the above is NOT the same
#     as \p{Block=Kannada}
# 
# perluniprops.pod should be consulted for the syntax rules for any of these,
# including if adding or subtracting white space, underscore, and hyphen
# characters matters or doesn't matter, and other permissible syntactic
# variants.  Upper/lower case distinctions never matter.
# 
# A colon can be substituted for the equals sign, and within each group
# above, anything to the left of the equals (or colon) can be combined with
# anything to the right.  Thus, for example,
#         \p{Sc: Kannada}
# is also valid.
# 
# The format of the lines of this file is: START\tSTOP\twhere START is the
# starting code point of the range, in hex; STOP is the ending point, or if
# omitted, the range has just one code point.  Numbers in comments in
# [brackets] indicate how many code points are in the range.

return <<'END';
0C82	0C83	# [2]
0C85	0C8C	# [8]
0C8E	0C90	# [3]
0C92	0CA8	# [23]
0CAA	0CB3	# [10]
0CB5	0CB9	# [5]
0CBC	0CC4	# [9]
0CC6	0CC8	# [3]
0CCA	0CCD	# [4]
0CD5	0CD6	# [2]
0CDE		
0CE0	0CE3	# [4]
0CE6	0CEF	# [10]
0CF1	0CF2	# [2]
END
